apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: endpointWatcher
rules:
- apiGroups: [""]
  resources:
  - endpoints
  - services
  verbs: ["get", "list", "watch"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube2consul
  namespace: administration

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube2consul
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: endpointWatcher
subjects:
- kind: ServiceAccount
  name: kube2consul
  namespace: administration

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube2consul-worker
  labels:
    run: kube2consul
  namespace: administration
spec:
  selector:
    matchLabels:
      run: kube2consul
  replicas: 3
  template:
    metadata:
      labels:
        run: kube2consul
    spec:
      serviceAccountName: kube2consul
      containers:
      - name: kube2consul
        image: kube2consul:latest
        command: ["kube2consul", "--lock", "--consul-api", "svc-consul.administration.svc.cluster.local:8500", "-explicit", "-resync-period", "5", "-exclude-namespace", "kube-system", "-exclude-namespace", "kube-public"]
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 15
        env:
        - name: K2C_LOGTOSTDERR
          value: "true"
